from common.colors import c


# =============== 1-й байт варианта исполнения ==============
def byte_11(tmp):
    return {
        tmp == "00": "0,2S",
        tmp == "01": "0,5S",
        tmp == "10": "1,0",
        tmp == "11": "2,0",
    }[True]


def byte_12(tmp):
    return {
        tmp == "00": "0,2",
        tmp == "01": "0,5",
        tmp == "10": "1,0",
        tmp == "11": "2,0",
    }[True]


def byte_13(tmp):
    return {
        tmp == "00": "57,7В",
        tmp == "01": "230В",
    }[True]


def byte_14(tmp):
    return {
        tmp == "00": "5А",
        tmp == "01": "1А",
        tmp == "10": "10А"
    }[True]


# =============== 2-й байт варианта исполнения ==============
def byte_21(tmp):
    return {
        tmp == "0": "2",
        tmp == "1": "1"
    }[True]


def byte_22(tmp):
    return {
        tmp == "0": "-20 C",
        tmp == "1": "-40 C"
    }[True]


def byte_24(tmp):
    return {
        tmp == "0": "3",
        tmp == "1": "1"
    }[True]


def byte_25(tmp):
    return {
        tmp == "0000": "5000 имп/кВт∙ч",
        tmp == "0001": "2500 имп/кВт∙ч",
        tmp == "0010": "1250 имп/кВт∙ч",
        tmp == "0011": "500 имп/кВт∙ч",
        tmp == "0100": "1000 имп/кВт∙ч",
        tmp == "0101": "250 имп/кВт∙ч"
    }[True]


# =============== 3-й байт варианта исполнения ==============
def byte_31(tmp):
    return {
        tmp == "0": "С учетом знака",
        tmp == "1": "По модулю"
    }[True]


def byte_32(tmp):
    return {
        tmp == "0": "Внешний",
        tmp == "1": "Внутренний"
    }[True]


def byte_33(tmp):
    return {
        tmp == "00": "A+R+",
        tmp == "01": "A+"
    }[True]


def byte_34(tmp):
    return {
        tmp == "0001": "Вариант 1",
        tmp == "0010": "Вариант 2",
        tmp == "0011": "Вариант 3",
        tmp == "0100": "Вариант 4",
    }[True]


def get_revision(tmp):
    return {
        tmp == "0001": "00",
        tmp == "0010": "01",
        tmp == "0011": "02",
        tmp == "0100": "03",
    }[True]


# =============== 4-й байт варианта исполнения ==============
def byte_41(tmp):
    return {
        tmp == "0": "65,5x8",
        tmp == "1": "131x8"
    }[True]


def byte_45(tmp):
    return {
        tmp == "00": "CAN",
        tmp == "01": "RS-485",
        tmp == "10": "Резерв",
        tmp == "11": "Нет",
    }[True]


def byte_47(tmp):
    return {
        tmp == "0": "Нет",
        tmp == "1": "Есть"
    }[True]


# =============== 7-й байт варианта исполнения ==============
def byte_71(tmp):
    return {
        tmp == "0000": "Не используется",
        tmp == "0001": "5000 имп/кВт∙ч",
        tmp == "0010": "2500 имп/кВт∙ч",
        tmp == "0011": "1250 имп/кВт∙ч",
        tmp == "0100": "500 имп/кВт∙ч",
        tmp == "0101": "1000 имп/кВт∙ч",
        tmp == "0110": "250 имп/кВт∙ч"
    }[True]


def print_exec(*arg):
    print(f'{c.GREEN}Серийный номер - {arg[0]}\n'
          f'Дата выпуска - {arg[1]}\n'
          f'Версия ПО - {arg[2]}\n'
          f'Ревизия ПО - {arg[3]}\n'
          f'CRC ПО - {arg[4]}\n'

          f'Класс точности А+ : {byte_11(arg[5][:2])}\n'
          f'Класс точности R+ : {byte_12(arg[5][2:4])}\n'
          f'Номинальное напряжение : {byte_13(arg[5][4:6])}\n'
          f'Номинальный ток : {byte_14(arg[5][6:])}\n'

          f'Число направлений : {byte_21(arg[6][0])}\n'
          f'Температурный диапазон : {byte_22(arg[6][1])}\n'
          f'Учет профиля средних мощностей : {byte_47(arg[6][2])}\n'
          f'Число фаз : {byte_24(arg[6][3])}\n'
          f'Постоянная счетчика : {byte_25(arg[6][4:])}\n'

          f'Суммирование фаз : {byte_31(arg[7][0])}\n'
          f'Тарификатор : {byte_32(arg[7][1])}\n'
          f'Тип счетчика : {byte_33(arg[7][2:4])}\n'
          f'Номер варианта исполнения : {byte_34(arg[7][4:])}\n'

          f'Память №3 : {byte_41(arg[8][0])}\n'
          f'Модем PLC : {byte_47(arg[8][1])}\n'
          f'Модем GSM : {byte_47(arg[8][2])}\n'
          f'Оптопорт : {byte_47(arg[8][3])}\n'
          f'Интерфейс 1: {byte_45(arg[8][4:6])}\n'
          f'Внешнее питание : {byte_47(arg[8][6])}\n'
          f'Эл.пломба верхней крышки : {byte_47(arg[8][7])}\n'

          f'Флаг наличия встроенного реле : {byte_47(arg[9][0])}\n'
          f'Флаг наличия подсветки ЖКИ : {byte_47(arg[9][1])}\n'
          f'Флаг потарифного учета максимумов мощности : {byte_47(arg[9][2])}\n'
          f'Флаг наличия эл.пломбы защитной крышки : {byte_47(arg[9][3])}\n'
          f'Интерфейс 2 : {byte_47(arg[9][4])}\n'
          f'Встроенное питание интерфейса 1 : {byte_47(arg[9][5])}\n'
          f'Контроль ПКЭ : {byte_47(arg[9][6])}\n'
          f'Пофазный учет энергии А+ : {byte_47(arg[9][7])}\n'

          f'Флаг измерения тока в нуле : {byte_47(arg[10][0])}\n'
          f'Флаг расширенного перечня массивов : {byte_47(arg[10][1])}\n'
          f'Флаг протокола IEC 61107 : {byte_47(arg[10][2])}\n'
          f'Модем PLC2 : {byte_47(arg[10][3])}\n'
          f'Флаг наличия профиля 2 : {byte_47(arg[10][4])}\n'
          f'Флаг наличия пломбы модульного отсека : {byte_47(arg[10][5])}\n'
          f'Флаг переключения тарифов внешним напряжением : {byte_47(arg[10][6])}\n'
          f'Реле управ-ния внешн.устр-ми откл. нагрузки : {byte_47(arg[10][7])}\n'

          f'Постоянная имп. и оптических выходов : {byte_71(arg[11][0:4])}\n'
          f'Флаг измерения провалов и перенапряжений : {byte_47(arg[11][4])}\n'
          f'Флаг тарифного учета R1-R4 : {byte_47(arg[11][5])}\n'
          f'Флаг КПК : {byte_47(arg[11][6])}\n'
          f'Флаг массива профилей : {byte_47(arg[11][7])}{c.END}\n'
          )
